"use strict";function Vector(x,y){this.x=x||0;this.y=y||0}Vector.prototype.set=function(x,y){this.x=x;this.y=y;return this};Vector.prototype.copy=function(v){this.x=v.x;this.y=v.y;return this};Vector.prototype.sub=function(v1,v2){this.x=v1.x-v2.x;this.y=v1.y-v2.y;return this};Vector.prototype.selfSub=function(v){this.x-=v.x;this.y-=v.y;return this};Vector.prototype.mult=function(v,f){this.x=v.x*f;this.y=v.y*f;return this};Vector.prototype.selfMult=function(f){this.x*=f;this.y*=f;return this};Vector.prototype.div=function(v,f){this.x=v.x/f;this.y=v.y/f;return this};Vector.prototype.selfDiv=function(f){this.x/=f;this.y/=f;return this};Vector.prototype.add=function(v1,v2){this.x=v1.x+v2.x;this.y=v1.y+v2.y;return this};Vector.prototype.selfAdd=function(v){this.x+=v.x;this.y+=v.y;return this};Vector.prototype.limit=function(maxLength){var lengthSquared=this.x*this.x+this.y*this.y;if((lengthSquared>maxLength*maxLength)&&(lengthSquared>0)){var ratio=maxLength/Math.sqrt(lengthSquared);this.x*=ratio;this.y*=ratio}return this};Vector.prototype.dist2=function(v){return((this.x-v.x)*(this.x-v.x)+(this.y-v.y)*(this.y-v.y))};Vector.prototype.mag2=function(){return(this.x*this.x+this.y*this.y)};